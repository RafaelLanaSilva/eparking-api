// <auto-generated />
using System;
using Eparking.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eparking.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Estacionamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOME");

                    b.Property<int?>("QuantidadeVagasCarro")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("QTD_VAGAS_CARRO");

                    b.Property<int?>("QuantidadeVagasMotocicleta")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("QTD_VAGAS_MOTOCICLETA");

                    b.Property<int?>("QuantidadeVagasPreferencial")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("QTD_VAGAS_PREFERENCIAL");

                    b.HasKey("Id");

                    b.ToTable("TB_ESTACIONAMENTO", (string)null);
                });

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Movimentacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("EstacionamentoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ESTACIONAMENTO_ID");

                    b.Property<DateTime?>("HoraEntrada")
                        .IsRequired()
                        .HasColumnType("datetime")
                        .HasColumnName("HORA_ENTRADA");

                    b.Property<DateTime?>("HoraSaida")
                        .HasColumnType("datetime")
                        .HasColumnName("HORA_SAIDA");

                    b.Property<Guid>("VagaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VAGA_ID");

                    b.Property<decimal?>("ValorCobrado")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("VALOR_COBRADO");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EstacionamentoId");

                    b.HasIndex("VagaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("TB_MOVIMENTACAO", (string)null);
                });

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Tarifa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("EstacionamentoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ESTACIONAMENTO_ID");

                    b.Property<int>("TipoVeiculo")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_VEICULO");

                    b.Property<int?>("ToleranciaMinutos")
                        .HasColumnType("int")
                        .HasColumnName("TOLERANCIA_MINUTOS");

                    b.Property<decimal?>("ValorFracao")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_FRACAO");

                    b.Property<decimal?>("ValorHora")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_HORA");

                    b.HasKey("Id");

                    b.HasIndex("EstacionamentoId");

                    b.ToTable("TB_TARIFA", (string)null);
                });

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Vaga", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("EstacionamentoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ESTACIONAMENTO_ID");

                    b.Property<int?>("Numero")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<bool>("Ocupado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("OCUPADO");

                    b.Property<int>("TipoVaga")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_VAGA");

                    b.HasKey("Id");

                    b.HasIndex("EstacionamentoId");

                    b.ToTable("TB_VAGA", (string)null);
                });

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Veiculo", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COR");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MODELO");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("PLACA");

                    b.Property<int>("TipoVeiculo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_VEICULO", (string)null);
                });

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Movimentacao", b =>
                {
                    b.HasOne("Eparking.Domain.Models.Entities.Estacionamento", "Estacionamento")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("EstacionamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eparking.Domain.Models.Entities.Vaga", "Vaga")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("VagaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eparking.Domain.Models.Entities.Veiculo", "Veiculo")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estacionamento");

                    b.Navigation("Vaga");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Tarifa", b =>
                {
                    b.HasOne("Eparking.Domain.Models.Entities.Estacionamento", "Estacionamento")
                        .WithMany("Tarifas")
                        .HasForeignKey("EstacionamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estacionamento");
                });

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Vaga", b =>
                {
                    b.HasOne("Eparking.Domain.Models.Entities.Estacionamento", "Estacionamento")
                        .WithMany("Vagas")
                        .HasForeignKey("EstacionamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Estacionamento");
                });

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Estacionamento", b =>
                {
                    b.Navigation("Movimentacoes");

                    b.Navigation("Tarifas");

                    b.Navigation("Vagas");
                });

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Vaga", b =>
                {
                    b.Navigation("Movimentacoes");
                });

            modelBuilder.Entity("Eparking.Domain.Models.Entities.Veiculo", b =>
                {
                    b.Navigation("Movimentacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
